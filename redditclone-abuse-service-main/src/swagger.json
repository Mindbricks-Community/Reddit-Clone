{
  "openapi": "3.0.1",
  "info": {
    "title": "redditclone-abuse-service API",
    "description": "Handles abuse and anti-spam workflows: collects and triages reports, enforces heuristics/rate limits, tracks flags on users/content, manages abuse investigations. Integrates with moderation/adminOps/content for platform health and safety.",
    "version": "1.0.0"
  },
  "servers": [],
  "paths": {
    "/abusereports/{abuseReportId}": {
      "get": {
        "tags": [
          "abuseReport"
        ],
        "summary": "The getAbuseReport API has 1 parameter.",
        "description": "getAbuseReport",
        "parameters": [
          {
            "name": "abuseReportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseReport** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseReport-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseReport-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseReport-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "abuseReport"
        ],
        "summary": "The updateAbuseReport API has 6 parameters.",
        "description": "updateAbuseReport",
        "parameters": [
          {
            "name": "abuseReportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseReport** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseReport-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseReport-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseReport-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "abuseReport"
        ],
        "summary": "The deleteAbuseReport API has 1 parameter.",
        "description": "deleteAbuseReport",
        "parameters": [
          {
            "name": "abuseReportId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseReport** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseReport-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseReport-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseReport-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abusereports": {
      "post": {
        "tags": [
          "abuseReport"
        ],
        "summary": "The createAbuseReport API has 10 parameters.",
        "description": "createAbuseReport",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseReport"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseReport"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseReport"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **abuseReport** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseReport-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseReport-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseReport-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "abuseReports"
        ],
        "summary": "The listAbuseReports API has no parameters.",
        "description": "listAbuseReports",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseReports"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseReports"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseReports"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseReports** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseReports-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseReports-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseReports-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseflags/{abuseFlagId}": {
      "get": {
        "tags": [
          "abuseFlag"
        ],
        "summary": "The getAbuseFlag API has 1 parameter.",
        "description": "getAbuseFlag",
        "parameters": [
          {
            "name": "abuseFlagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseFlag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseFlag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseFlag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseFlag** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseFlag-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseFlag-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseFlag-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "abuseFlag"
        ],
        "summary": "The updateAbuseFlag API has 3 parameters.",
        "description": "updateAbuseFlag",
        "parameters": [
          {
            "name": "abuseFlagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseFlag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseFlag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseFlag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseFlag** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseFlag-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseFlag-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseFlag-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "abuseFlag"
        ],
        "summary": "The deleteAbuseFlag API has 1 parameter.",
        "description": "deleteAbuseFlag",
        "parameters": [
          {
            "name": "abuseFlagId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseFlag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseFlag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseFlag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseFlag** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseFlag-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseFlag-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseFlag-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseflags": {
      "post": {
        "tags": [
          "abuseFlag"
        ],
        "summary": "The createAbuseFlag API has 8 parameters.",
        "description": "createAbuseFlag",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseFlag"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseFlag"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseFlag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **abuseFlag** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseFlag-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseFlag-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseFlag-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "abuseFlags"
        ],
        "summary": "The listAbuseFlags API has no parameters.",
        "description": "listAbuseFlags",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseFlags"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseFlags"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseFlags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseFlags** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseFlags-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseFlags-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseFlags-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseheuristictriggers/{abuseHeuristicTriggerId}": {
      "get": {
        "tags": [
          "abuseHeuristicTrigger"
        ],
        "summary": "The getAbuseHeuristicTrigger API has 1 parameter.",
        "description": "getAbuseHeuristicTrigger",
        "parameters": [
          {
            "name": "abuseHeuristicTriggerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseHeuristicTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseHeuristicTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseHeuristicTrigger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseHeuristicTrigger** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseHeuristicTrigger-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseHeuristicTrigger-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseHeuristicTrigger-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "abuseHeuristicTrigger"
        ],
        "summary": "The updateAbuseHeuristicTrigger API has 2 parameters.",
        "description": "updateAbuseHeuristicTrigger",
        "parameters": [
          {
            "name": "abuseHeuristicTriggerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseHeuristicTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseHeuristicTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseHeuristicTrigger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseHeuristicTrigger** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseHeuristicTrigger-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseHeuristicTrigger-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseHeuristicTrigger-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "abuseHeuristicTrigger"
        ],
        "summary": "The deleteAbuseHeuristicTrigger API has 1 parameter.",
        "description": "deleteAbuseHeuristicTrigger",
        "parameters": [
          {
            "name": "abuseHeuristicTriggerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseHeuristicTrigger** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseHeuristicTrigger-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseheuristictriggers": {
      "post": {
        "tags": [
          "abuseHeuristicTrigger"
        ],
        "summary": "The createAbuseHeuristicTrigger API has 5 parameters.",
        "description": "createAbuseHeuristicTrigger",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseHeuristicTrigger"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseHeuristicTrigger"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseHeuristicTrigger"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **abuseHeuristicTrigger** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseHeuristicTrigger-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseHeuristicTrigger-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseHeuristicTrigger-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "abuseHeuristicTriggers"
        ],
        "summary": "The listAbuseHeuristicTriggers API has no parameters.",
        "description": "listAbuseHeuristicTriggers",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseHeuristicTriggers"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseHeuristicTriggers"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseHeuristicTriggers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseHeuristicTriggers** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseHeuristicTriggers-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseHeuristicTriggers-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseHeuristicTriggers-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseinvestigations/{abuseInvestigationId}": {
      "get": {
        "tags": [
          "abuseInvestigation"
        ],
        "summary": "The getAbuseInvestigation API has 1 parameter.",
        "description": "getAbuseInvestigation",
        "parameters": [
          {
            "name": "abuseInvestigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseInvestigation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseInvestigation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getAbuseInvestigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseInvestigation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseInvestigation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseInvestigation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getAbuseInvestigation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "abuseInvestigation"
        ],
        "summary": "The updateAbuseInvestigation API has 7 parameters.",
        "description": "updateAbuseInvestigation",
        "parameters": [
          {
            "name": "abuseInvestigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseInvestigation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseInvestigation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateAbuseInvestigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseInvestigation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseInvestigation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseInvestigation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateAbuseInvestigation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "abuseInvestigation"
        ],
        "summary": "The deleteAbuseInvestigation API has 1 parameter.",
        "description": "deleteAbuseInvestigation",
        "parameters": [
          {
            "name": "abuseInvestigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseInvestigation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseInvestigation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteAbuseInvestigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseInvestigation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseInvestigation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseInvestigation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteAbuseInvestigation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/abuseinvestigations": {
      "post": {
        "tags": [
          "abuseInvestigation"
        ],
        "summary": "The createAbuseInvestigation API has 7 parameters.",
        "description": "createAbuseInvestigation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseInvestigation"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseInvestigation"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createAbuseInvestigation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **abuseInvestigation** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseInvestigation-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseInvestigation-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createAbuseInvestigation-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "abuseInvestigations"
        ],
        "summary": "The listAbuseInvestigations API has no parameters.",
        "description": "listAbuseInvestigations",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseInvestigations"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseInvestigations"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listAbuseInvestigations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **abuseInvestigations** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseInvestigations-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseInvestigations-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listAbuseInvestigations-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "getAbuseReport": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAbuseReport": {
        "type": "object",
        "properties": {
          "reportStatus": {
            "type": "string",
            "nullable": true
          },
          "reasonText": {
            "type": "string",
            "nullable": true
          },
          "resolutionResult": {
            "type": "string",
            "nullable": true
          },
          "resolvedByUserId": {
            "type": "string",
            "nullable": true
          },
          "extraData": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAbuseReport": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAbuseReport": {
        "type": "object",
        "properties": {
          "reportType": {
            "type": "string",
            "nullable": false
          },
          "reportStatus": {
            "type": "string",
            "nullable": false
          },
          "reasonText": {
            "type": "string",
            "nullable": true
          },
          "reportedUserId": {
            "type": "string",
            "nullable": true
          },
          "postId": {
            "type": "string",
            "nullable": true
          },
          "commentId": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": false
          },
          "resolutionResult": {
            "type": "string",
            "nullable": true
          },
          "resolvedByUserId": {
            "type": "string",
            "nullable": true
          },
          "extraData": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAbuseReports": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAbuseFlag": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAbuseFlag": {
        "type": "object",
        "properties": {
          "flagStatus": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAbuseFlag": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAbuseFlag": {
        "type": "object",
        "properties": {
          "flagType": {
            "type": "string",
            "nullable": false
          },
          "flagStatus": {
            "type": "string",
            "nullable": false
          },
          "postId": {
            "type": "string",
            "nullable": true
          },
          "commentId": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "mediaObjectId": {
            "type": "string",
            "nullable": true
          },
          "origin": {
            "type": "string",
            "nullable": false
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAbuseFlags": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAbuseHeuristicTrigger": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAbuseHeuristicTrigger": {
        "type": "object",
        "properties": {
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAbuseHeuristicTrigger": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAbuseHeuristicTrigger": {
        "type": "object",
        "properties": {
          "triggerType": {
            "type": "string",
            "nullable": false
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "targetId": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAbuseHeuristicTriggers": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAbuseInvestigation": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateAbuseInvestigation": {
        "type": "object",
        "properties": {
          "investigationStatus": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "assignedToUserIds": {
            "type": "string",
            "nullable": true
          },
          "relatedReportIds": {
            "type": "string",
            "nullable": true
          },
          "relatedFlagIds": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteAbuseInvestigation": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createAbuseInvestigation": {
        "type": "object",
        "properties": {
          "investigationStatus": {
            "type": "string",
            "nullable": false
          },
          "title": {
            "type": "string",
            "nullable": false
          },
          "openedByUserId": {
            "type": "string",
            "nullable": false
          },
          "assignedToUserIds": {
            "type": "string",
            "nullable": true
          },
          "relatedReportIds": {
            "type": "string",
            "nullable": true
          },
          "relatedFlagIds": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "object",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listAbuseInvestigations": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getAbuseReport-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseReport": {
            "$ref": "#/components/schemas/abuseReport-object"
          }
        }
      },
      "updateAbuseReport-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseReport": {
            "$ref": "#/components/schemas/abuseReport-object"
          }
        }
      },
      "deleteAbuseReport-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseReport": {
            "$ref": "#/components/schemas/abuseReport-object"
          }
        }
      },
      "createAbuseReport-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseReport": {
            "$ref": "#/components/schemas/abuseReport-object"
          }
        }
      },
      "listAbuseReports-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "abuseReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/abuseReports-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getAbuseFlag-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseFlag": {
            "$ref": "#/components/schemas/abuseFlag-object"
          }
        }
      },
      "updateAbuseFlag-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseFlag": {
            "$ref": "#/components/schemas/abuseFlag-object"
          }
        }
      },
      "deleteAbuseFlag-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseFlag": {
            "$ref": "#/components/schemas/abuseFlag-object"
          }
        }
      },
      "createAbuseFlag-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseFlag": {
            "$ref": "#/components/schemas/abuseFlag-object"
          }
        }
      },
      "listAbuseFlags-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "abuseFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/abuseFlags-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getAbuseHeuristicTrigger-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseHeuristicTrigger": {
            "$ref": "#/components/schemas/abuseHeuristicTrigger-object"
          }
        }
      },
      "updateAbuseHeuristicTrigger-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseHeuristicTrigger": {
            "$ref": "#/components/schemas/abuseHeuristicTrigger-object"
          }
        }
      },
      "deleteAbuseHeuristicTrigger-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseHeuristicTrigger": {
            "$ref": "#/components/schemas/abuseHeuristicTrigger-object"
          }
        }
      },
      "createAbuseHeuristicTrigger-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseHeuristicTrigger": {
            "$ref": "#/components/schemas/abuseHeuristicTrigger-object"
          }
        }
      },
      "listAbuseHeuristicTriggers-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "abuseHeuristicTriggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/abuseHeuristicTriggers-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getAbuseInvestigation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseInvestigation": {
            "$ref": "#/components/schemas/abuseInvestigation-object"
          }
        }
      },
      "updateAbuseInvestigation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseInvestigation": {
            "$ref": "#/components/schemas/abuseInvestigation-object"
          }
        }
      },
      "deleteAbuseInvestigation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseInvestigation": {
            "$ref": "#/components/schemas/abuseInvestigation-object"
          }
        }
      },
      "createAbuseInvestigation-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "abuseInvestigation": {
            "$ref": "#/components/schemas/abuseInvestigation-object"
          }
        }
      },
      "listAbuseInvestigations-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "abuseInvestigations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/abuseInvestigations-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "abuseReport-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseReports-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "paging-object": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "number"
          },
          "pageRowCount": {
            "type": "number"
          },
          "totalRowCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      },
      "abuseFlag-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseFlags-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseHeuristicTrigger-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseHeuristicTriggers-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseInvestigation-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "abuseInvestigations-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n  Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
