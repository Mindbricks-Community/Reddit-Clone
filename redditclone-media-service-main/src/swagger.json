{
  "openapi": "3.0.1",
  "info": {
    "title": "redditclone-media-service API",
    "description": "Handles uploading, processing, optimization, scanning, and secure hosting of user-generated media (images, videos, galleries). Performs NSFW and malware detection on all incoming uploads. Manages storage and delivery URLs for association in the content service.",
    "version": "1.0.0"
  },
  "servers": [],
  "paths": {
    "/mediaobjects/{mediaObjectId}": {
      "get": {
        "tags": [
          "mediaObject"
        ],
        "summary": "The getMediaObject API has 1 parameter.",
        "description": "getMediaObject",
        "parameters": [
          {
            "name": "mediaObjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaObject** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaObject-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaObject-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaObject-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "mediaObject"
        ],
        "summary": "The updateMediaObject API has 6 parameters.",
        "description": "updateMediaObject",
        "parameters": [
          {
            "name": "mediaObjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaObject** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaObject-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaObject-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaObject-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "mediaObject"
        ],
        "summary": "The deleteMediaObject API has 1 parameter.",
        "description": "deleteMediaObject",
        "parameters": [
          {
            "name": "mediaObjectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaObject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaObject** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaObject-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaObject-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaObject-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mediaobjects": {
      "post": {
        "tags": [
          "mediaObject"
        ],
        "summary": "The createMediaObject API has 9 parameters.",
        "description": "createMediaObject",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaObject"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaObject"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaObject"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **mediaObject** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaObject-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaObject-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaObject-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "mediaObjects"
        ],
        "summary": "The listMediaObjects API has no parameters.",
        "description": "listMediaObjects",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaObjects"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaObjects"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaObjects"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaObjects** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaObjects-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaObjects-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaObjects-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mediascans/{mediaScanId}": {
      "get": {
        "tags": [
          "mediaScan"
        ],
        "summary": "The getMediaScan API has 1 parameter.",
        "description": "getMediaScan",
        "parameters": [
          {
            "name": "mediaScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaScan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaScan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/getMediaScan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaScan** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaScan-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaScan-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/getMediaScan-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "mediaScan"
        ],
        "summary": "The updateMediaScan API has 1 parameter.",
        "description": "updateMediaScan",
        "parameters": [
          {
            "name": "mediaScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaScan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaScan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/updateMediaScan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaScan** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaScan-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaScan-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateMediaScan-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "mediaScan"
        ],
        "summary": "The deleteMediaScan API has 1 parameter.",
        "description": "deleteMediaScan",
        "parameters": [
          {
            "name": "mediaScanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaScan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaScan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/deleteMediaScan"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaScan** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaScan-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaScan-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteMediaScan-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/mediascans": {
      "post": {
        "tags": [
          "mediaScan"
        ],
        "summary": "The createMediaScan API has 4 parameters.",
        "description": "createMediaScan",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaScan"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaScan"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/createMediaScan"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Response JSON represents the most comprehensive form of the **mediaScan** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaScan-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaScan-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/createMediaScan-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "mediaScans"
        ],
        "summary": "The listMediaScans API has no parameters.",
        "description": "listMediaScans",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaScans"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaScans"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/listMediaScans"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response JSON represents the most comprehensive form of the **mediaScans** object in the response. However, some properties may be omitted based on the object&#39;s internal logic.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaScans-Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaScans-Response"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/listMediaScans-Response"
                }
              }
            }
          },
          "400": {
            "description": "The request was improperly formatted or contained invalid parameters, preventing the server from processing it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked valid authentication credentials or the credentials provided do not grant access to the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource was not found on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              },
              "application/*+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "errCode": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "getMediaObject": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateMediaObject": {
        "type": "object",
        "properties": {
          "optimizedUrl": {
            "type": "string",
            "nullable": true
          },
          "previewUrl": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "nsfwScore": {
            "type": "string",
            "nullable": true
          },
          "malwareStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "deleteMediaObject": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createMediaObject": {
        "type": "object",
        "properties": {
          "mediaType": {
            "type": "string",
            "nullable": false
          },
          "originalUrl": {
            "type": "string",
            "nullable": false
          },
          "optimizedUrl": {
            "type": "string",
            "nullable": true
          },
          "previewUrl": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "fileSize": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": false
          },
          "nsfwScore": {
            "type": "string",
            "nullable": true
          },
          "malwareStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "listMediaObjects": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getMediaScan": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "updateMediaScan": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "deleteMediaScan": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "createMediaScan": {
        "type": "object",
        "properties": {
          "mediaObjectId": {
            "type": "string",
            "nullable": false
          },
          "scanType": {
            "type": "string",
            "nullable": false
          },
          "result": {
            "type": "object",
            "nullable": false
          },
          "scanStatus": {
            "type": "string",
            "nullable": false
          }
        },
        "additionalProperties": false
      },
      "listMediaScans": {
        "type": "object",
        "properties": {},
        "additionalProperties": false
      },
      "getMediaObject-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaObject": {
            "$ref": "#/components/schemas/mediaObject-object"
          }
        }
      },
      "updateMediaObject-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaObject": {
            "$ref": "#/components/schemas/mediaObject-object"
          }
        }
      },
      "deleteMediaObject-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaObject": {
            "$ref": "#/components/schemas/mediaObject-object"
          }
        }
      },
      "createMediaObject-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaObject": {
            "$ref": "#/components/schemas/mediaObject-object"
          }
        }
      },
      "listMediaObjects-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "mediaObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/mediaObjects-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "getMediaScan-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaScan": {
            "$ref": "#/components/schemas/mediaScan-object"
          }
        }
      },
      "updateMediaScan-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaScan": {
            "$ref": "#/components/schemas/mediaScan-object"
          }
        }
      },
      "deleteMediaScan-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaScan": {
            "$ref": "#/components/schemas/mediaScan-object"
          }
        }
      },
      "createMediaScan-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "number"
          },
          "mediaScan": {
            "$ref": "#/components/schemas/mediaScan-object"
          }
        }
      },
      "listMediaScans-Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "elapsedMs": {
            "type": "number"
          },
          "ssoTime": {
            "type": "number"
          },
          "source": {
            "type": "string"
          },
          "cacheKey": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "dataName": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "appVersion": {
            "type": "string"
          },
          "rowCount": {
            "type": "string"
          },
          "mediaScans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/mediaScans-object"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging-object"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uiPermissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "mediaObject-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "mediaObjects-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "paging-object": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "number"
          },
          "pageRowCount": {
            "type": "number"
          },
          "totalRowCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          }
        }
      },
      "mediaScan-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "mediaScans-object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \r\n  Enter 'Bearer' [space] and then your token in the text input below.\r\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}
