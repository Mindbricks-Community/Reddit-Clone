const { sequelize } = require("common");
const { DataTypes } = require("sequelize");

//Records each event generated by the community-level automoderator logic (trigger, removal, lock, filter, etc). Links to content, rule, and context.
const AutomodEvent = sequelize.define(
  "automodEvent",
  {
    id: {
      type: DataTypes.UUID,
      primaryKey: true,
    },
    communityId: {
      // Community where this automod event took place.
      type: DataTypes.UUID,
      allowNull: false,
    },
    targetType: {
      // Target type: 0=post, 1=comment.
      type: DataTypes.STRING,
      allowNull: false,
      defaultValue: "post",
    },
    targetId: {
      // ID of the post or comment affected by the automod event.
      type: DataTypes.UUID,
      allowNull: false,
    },
    automodType: {
      // Type of automod event: 0=trigger, 1=auto-remove, 2=auto-lock, 3=flag-nsfw, 4=filter, 5=rate-limit, 6=spam-detect, 7=media-flag, 8=custom.
      type: DataTypes.STRING,
      allowNull: false,
      defaultValue: "trigger",
    },
    ruleId: {
      // ID of the automod or community rule (if any) that triggered the event.
      type: DataTypes.UUID,
      allowNull: true,
    },
    performedByAutomod: {
      // True if the action/event was performed by automod.
      type: DataTypes.BOOLEAN,
      allowNull: false,
      defaultValue: true,
    },
    triggerDetails: {
      // JSON blob: detailed trigger context: keywords, patterns, match values.
      type: DataTypes.JSONB,
      allowNull: true,
    },
    isActive: {
      // isActive property will be set to false when deleted
      // so that the document will be archived
      type: DataTypes.BOOLEAN,
      defaultValue: true,
      allowNull: true,
    },
  },
  {
    indexes: [
      {
        unique: false,
        fields: ["communityId"],
      },
    ],
  },
);

module.exports = AutomodEvent;
